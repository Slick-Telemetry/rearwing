#-->> System <<--------------------------------------------
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

#-->> Metadata <<------------------------------------------
[tool.poetry]
name = "rearwing"
version = "0.7.0"
description = "Slick Telemetry backend written in python with fastapi"
authors = ["Slick Telemetry <contact@slicktelemetry.com>"]
readme = "README.md"

#-->> Dependencies <<--------------------------------------
# Main dependencies (required by application)
[tool.poetry.dependencies]
fastapi = "^0.115.3"
fastf1 = "3.4.4"
gunicorn = "^23.0.0"
newrelic = "^10.2.0"
python = "3.13.1"
python-dotenv = "^1.0.1"
uvicorn = { extras = ["standard"], version = "^0.34.0" }
uvicorn-worker = "^0.2.0"

# Development (common) dependencies
[tool.poetry.group.dev.dependencies]
commitizen = "*"
pre-commit = "*"
poethepoet = "*"

# Formatting dependencies
[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
black = "*"
isort = "*"
mypy = "*"
pylint = "*"
pyproject-autoflake = "*"

# Testing dependencies
[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
httpx = "*"
pytest = "*"

#-->> Scripts <<-------------------------------------------
[tool.poe.tasks]
autoflake = "pautoflake run.py app"
black = "black run.py app"
isort = "isort run.py app"
formatters = ["autoflake", "isort", "black"]
git-hooks-setup = "pre-commit install --hook-type commit-msg --hook-type pre-push --hook-type pre-commit"
git-hooks-update = "pre-commit autoupdate"
linters = ["pylint"]
pylint = "pylint run.py app"
# tests = "python run_tests.py"
typings = "mypy run.py app"

#-->> Configuration <<-------------------------------------
[tool.autoflake]
# return error code if changes are needed
check = false
# make changes to files instead of printing diffs
in-place = true
# exclude __init__.py when removing unused imports
ignore-init-module-imports = true
# remove all unused imports (not just those from the standard library)
remove-all-unused-imports = true
# remove unused variables
remove-unused-variables = true
# drill down directories recursively
recursive = true

[tool.black]
line-length = 120
target-version = ["py312"]

[tool.commitizen]
version = "0.7.0"
version_files = [
    "app/__init__.py:__version__",
    "pyproject.toml:version",
    "VERSION",
]
update_changelog_on_bump = true
major_version_zero = true

[tool.isort]
profile = "black"
lines_after_imports = 2
line_length = 120
multi_line_output = 3
import_heading_stdlib = "Built-in"
import_heading_thirdparty = "External"
import_heading_firstparty = "Project"
import_heading_localfolder = "App"

[tool.mypy]
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
files = ["app/*.py"]
ignore_missing_imports = true
pretty = true
show_error_codes = true
show_error_context = true
warn_unreachable = true
warn_return_any = true
